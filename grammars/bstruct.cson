# If this is your first time writing a language grammar, check out:
#   - http://manual.macromates.com/en/language_grammars

'scopeName': 'source.bstruct'
'name': 'bstruct'
'fileTypes': [
  'bstruct'
]
'patterns': [
  {
    'include': '#comments'
  }
  {
    'match': '(big|little) endian',
    'name': 'keyword.control'
  }
  {
    'match': '\\b(struct)\\s+([a-zA-Z0-9_]+)\\b'
    'captures':
      '1':
        'name': 'keyword.other.struct.bstruct'
      '2':
        'name': 'entity.name.type.bstruct'
  }
  {
    'begin': 'extends'
    'beginCaptures':
      '0':
        'name': 'storage.modifier.extends.bstruct'
    'end': '{'
    'name': 'meta.definition.type.extends.bstruct'
    'patterns': [
      {
        'match': '[a-zA-Z0-9_]'
        'name': 'entity.name.type.bstruct'
      }
    ]
  }
  {
    'begin': '{'
    'end': '}'
    'name': 'meta.type.bstruct'
    'patterns': [
      {
        'include': '#comments'
      }
      {
        'include': '#field'
      }
    ]
  }
]
'repository': {
  'comments': {
    'match': '//.*$',
    'name': 'comment.line.double-slash.kxi'
  }
  'field': {
    'begin': '\\b([a-zA-Z0-9_]+)\\b'
    'beginCaptures':
      '1':
        'name': 'entity.name.type.bstruct'
    'end': ';'
    'patterns': [
      {
        'include': '#integer'
      }
    ]
  }
  'integer': {
    'match': '\\b((0(x|X)[0-9a-fA-F]+)|([0-9]+))\\b'
    'name': 'constant.numeric.bstruct'
  }
}
